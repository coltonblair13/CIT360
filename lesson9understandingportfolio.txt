<!-- Start File
Understanding Portfolio — Week of March 9th - March 14th

Model View Controller Pattern

This week I taught the model view controller pattern to my group during our group meeting. I covered most of this in the recording. It can be found on our group page at https://plus.google.com/communities/103827854741093694877 and my teaching starts at about the 14 minute mark for this topic. 

I also share some code that I have been working with. I created a modelviewcontrollerpattern folder out on my github that contains the code. What I did was create a student object acting as the model and a StudentView that will be the view class which will pring the student details on console and then a studentController which is the controller class responsible for storing the data in Student object and update view StudentView accordingly.

Each of these including the output can be found on my github at  https://github.com/coltonblair13/CIT360/tree/master/modelviewcontrollerpattern



State Diagram

 I also completed a State Diagram using lucidcharts. I learned that a state diagram depicts the various states that an object may be in and the transitions between those states. A state represents the a stage in the behavior pattern of an object and like activity diagrams it is possible to have initial states and final states. I completed a state diagram of a etch a sketch program. This was the same code that I used to complete the other diagrams. I thought it would be a good idea and easier to use the same code. It helps it make more sense in my mind. 

 The code that I used can be found at https://github.com/coltonblair13/CIT360/blob/master/ControlPanelEtchASketch.java and my diagram can be found at https://github.com/coltonblair13/CIT360/blob/master/Appendix%206%20-%20State%20Diagram.pdf


Client and Server sockets

For this topic I didn't get to far into it but I learned that in socket programming sockets provide the communication mechanism between two computers using TCP. A client program creates a socket on its end of the communication and attempts to connect that socket to a server. 

When the connection is made, the server creates a socket object on its end of the communication. The client and server can now communicate by writing to and reading from the socket. 

I also learned how to make a socket client example and a socket server example. These examples can be found at https://github.com/coltonblair13/CIT360/tree/master/ClientandServerSockets I couldn't figure out how to actually compile the client and server so that it worked but I will continue to work on it. It is just a start for now. 

Thanks!